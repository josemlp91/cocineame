{
  "_args": [
    [
      {
        "raw": "mini-css-extract-plugin@~0.4.0",
        "scope": null,
        "escapedName": "mini-css-extract-plugin",
        "name": "mini-css-extract-plugin",
        "rawSpec": "~0.4.0",
        "spec": ">=0.4.0 <0.5.0",
        "type": "range"
      },
      "/home/josemlp/workspace/cocineame/static/cocineame/node_modules/@angular-devkit/build-angular"
    ]
  ],
  "_from": "mini-css-extract-plugin@>=0.4.0 <0.5.0",
  "_id": "mini-css-extract-plugin@0.4.0",
  "_inCache": true,
  "_location": "/mini-css-extract-plugin",
  "_nodeVersion": "8.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/mini-css-extract-plugin_0.4.0_1522340072912_0.2522280868739948"
  },
  "_npmUser": {
    "name": "sokra",
    "email": "tobias.koppers@googlemail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mini-css-extract-plugin@~0.4.0",
    "scope": null,
    "escapedName": "mini-css-extract-plugin",
    "name": "mini-css-extract-plugin",
    "rawSpec": "~0.4.0",
    "spec": ">=0.4.0 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@angular-devkit/build-angular"
  ],
  "_resolved": "https://registry.npmjs.org/mini-css-extract-plugin/-/mini-css-extract-plugin-0.4.0.tgz",
  "_shasum": "ff3bf08bee96e618e177c16ca6131bfecef707f9",
  "_shrinkwrap": null,
  "_spec": "mini-css-extract-plugin@~0.4.0",
  "_where": "/home/josemlp/workspace/cocineame/static/cocineame/node_modules/@angular-devkit/build-angular",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "bugs": {
    "url": "https://github.com/webpack-contrib/mini-css-extract-plugin/issues"
  },
  "dependencies": {
    "loader-utils": "^1.1.0",
    "webpack-sources": "^1.1.0"
  },
  "description": "desc",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-jest": "^22.2.2",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-polyfill": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "cross-env": "^5.1.3",
    "css-loader": "^0.28.10",
    "del-cli": "^1.1.0",
    "eslint": "^4.17.0",
    "eslint-config-webpack": "^1.2.5",
    "eslint-plugin-import": "^2.8.0",
    "jest": "^22.2.2",
    "lint-staged": "^6.1.0",
    "nsp": "^3.1.0",
    "pre-commit": "^1.2.2",
    "standard-version": "^4.3.0",
    "webpack": "^4.4.0",
    "webpack-cli": "^2.0.13",
    "webpack-defaults": "^1.6.0",
    "webpack-dev-server": "^3.1.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-2Zik6PhUZ/MbiboG6SDS9UTPL4XXy4qnyGjSdCIWRrr8xb6PwLtHE+AYOjkXJWdF0OG8vo/yrJ8CgS5WbMpzIg==",
    "shasum": "ff3bf08bee96e618e177c16ca6131bfecef707f9",
    "tarball": "https://registry.npmjs.org/mini-css-extract-plugin/-/mini-css-extract-plugin-0.4.0.tgz",
    "fileCount": 7,
    "unpackedSize": 26910
  },
  "engines": {
    "node": ">= 6.11.5"
  },
  "files": [
    "dist"
  ],
  "gitHead": "e200b083e5a437026d6021262d4ac56088b39e65",
  "homepage": "https://github.com/webpack-contrib/mini-css-extract-plugin#readme",
  "license": "MIT",
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ]
  },
  "main": "dist/cjs.js",
  "maintainers": [
    {
      "name": "bebraw",
      "email": "bebraw@gmail.com"
    },
    {
      "name": "d3viant0ne",
      "email": "wiens.joshua@gmail.com"
    },
    {
      "name": "jhnns",
      "email": "mail@johannesewald.de"
    },
    {
      "name": "jtangelder",
      "email": "j.tangelder@gmail.com"
    },
    {
      "name": "michael-ciniawsky",
      "email": "michael.ciniawsky@gmail.com"
    },
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    },
    {
      "name": "thelarkinn",
      "email": "sean.larkin@cuw.edu"
    }
  ],
  "name": "mini-css-extract-plugin",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^4.4.0"
  },
  "pre-commit": "lint-staged",
  "private": false,
  "readme": "[![npm][npm]][npm-url]\n[![deps][deps]][deps-url]\n[![test][test]][test-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n\n<div align=\"center\">\n  <!-- replace with accurate logo e.g from https://worldvectorlogo.com/ -->\n  <img width=\"200\" height=\"200\" src=\"https://cdn.worldvectorlogo.com/logos/javascript.svg\">\n  <a href=\"https://webpack.js.org/\">\n    <img width=\"200\" height=\"200\" vspace=\"\" hspace=\"25\" src=\"https://cdn.rawgit.com/webpack/media/e7485eb2/logo/icon-square-big.svg\">\n  </a>\n  <h1>mini-css-extract-plugin</h1>\n  <p>desc</p>\n</div>\n\nThis plugin extract CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.\n\nIt builds on top of a new webpack v4 feature (module types) and requires webpack 4 to work.\n\nCompared to the extract-text-webpack-plugin:\n\n* Async loading\n* No duplicate compilation (performance)\n* Easier to use\n* Specific to CSS\n\nTODO:\n\n* HMR support\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm install --save-dev mini-css-extract-plugin\n```\n\n<h2 align=\"center\">Usage</h2>\n\n### Configuration\n\n**webpack.config.js**\n\n```js\nconst MiniCssExtractPlugin = require(\"mini-css-extract-plugin\");\nmodule.exports = {\n  plugins: [\n    new MiniCssExtractPlugin({\n      // Options similar to the same options in webpackOptions.output\n      // both options are optional\n      filename: \"[name].css\",\n      chunkFilename: \"[id].css\"\n    })\n  ],\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          MiniCssExtractPlugin.loader,\n          \"css-loader\"\n        ]\n      }\n    ]\n  }\n}\n```\n\n### Minimizing For Production\n\nWhile webpack 5 is likely to come with a CSS minimizer built-in, with webpack 4 you need to bring your own. To minify the output, use a plugin like [optimize-css-assets-webpack-plugin](https://github.com/NMFR/optimize-css-assets-webpack-plugin). Setting `optimization.minimizer` overrides the defaults provided by webpack, so make sure to also specify a JS minimizer:\n\n**webpack.config.js**\n\n```js\nconst UglifyJsPlugin = require(\"uglifyjs-webpack-plugin\");\nconst MiniCssExtractPlugin = require(\"mini-css-extract-plugin\");\nconst OptimizeCSSAssetsPlugin = require(\"optimize-css-assets-webpack-plugin\");\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        cache: true,\n        parallel: true,\n        sourceMap: true // set to true if you want JS source maps\n      }),\n      new OptimizeCSSAssetsPlugin({})\n    ]\n  },\n  plugins: [\n    new MiniCssExtractPlugin({\n      filename: \"[name].css\",\n      chunkFilename: \"[id].css\"\n    })\n  ],\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          MiniCssExtractPlugin.loader,\n          \"css-loader\"\n        ]\n      }\n    ]\n  }\n}\n```\n\n### Features\n\n#### Using preloaded or inlined CSS\n\nThe runtime code detects already added CSS via `<link>` or `<style>` tag.\nThis can be useful when injecting CSS on server-side for Server-Side-Rendering.\nThe `href` of the `<link>` tag has to match the URL that will be used for loading the CSS chunk.\nThe `data-href` attribute can be used for `<link>` and `<style>` too.\nWhen inlining CSS `data-href` must be used.\n\n#### Extracting all CSS in a single file\n\nSimilar to what [extract-text-webpack-plugin](https://github.com/webpack-contrib/extract-text-webpack-plugin) does, the CSS\ncan be extracted in one CSS file using `optimization.splitChunks.cacheGroups`.\n\n**webpack.config.js**\n\n```js\nconst MiniCssExtractPlugin = require(\"mini-css-extract-plugin\");\nmodule.exports = {\n  optimization: {\n    splitChunks: {\n      cacheGroups: {\n        styles: {\n          name: 'styles',\n          test: /\\.css$/,\n          chunks: 'all',\n          enforce: true\n        }\n      }\n    }\n  },\n  plugins: [\n    new MiniCssExtractPlugin({\n      filename: \"[name].css\",\n    })\n  ],\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          MiniCssExtractPlugin.loader,\n          \"css-loader\"\n        ]\n      }\n    ]\n  }\n}\n```\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <a href=\"https://github.com/sokra\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/sokra.png?size=150\">\n          </br>\n          Tobias Koppers\n        </a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n\n#### Long Term Caching\n\nFor long term caching use `filename: \"[contenthash].css\"`. Optionally add `[name]`.\n\n\n[npm]: https://img.shields.io/npm/v/mini-css-extract-plugin.svg\n[npm-url]: https://npmjs.com/package/mini-css-extract-plugin\n\n[deps]: https://david-dm.org/webpack-contrib/mini-css-extract-plugin.svg\n[deps-url]: https://david-dm.org/webpack-contrib/mini-css-extract-plugin\n\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n\n[test]: http://img.shields.io/travis/webpack-contrib/mini-css-extract-plugin.svg\n[test-url]: https://travis-ci.org/webpack-contrib/mini-css-extract-plugin\n\n[cover]: https://codecov.io/gh/webpack-contrib/mini-css-extract-plugin/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/mini-css-extract-plugin\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack-contrib/mini-css-extract-plugin.git"
  },
  "scripts": {
    "appveyor:test": "npm run test",
    "build": "cross-env NODE_ENV=production babel src -d dist --ignore 'src/**/*.test.js'",
    "clean": "del-cli dist",
    "lint": "eslint --cache src test",
    "lint-staged": "lint-staged",
    "prebuild": "npm run clean",
    "prepublish": "npm run build",
    "release": "standard-version",
    "security": "nsp check",
    "start": "npm run build -- -w",
    "test": "jest",
    "test:coverage": "jest --collectCoverageFrom='src/**/*.js' --coverage",
    "test:manual": "webpack-dev-server test/manual/src/index.js --open --config test/manual/webpack.config.js",
    "test:watch": "jest --watch",
    "travis:coverage": "npm run test:coverage -- --runInBand",
    "travis:lint": "npm run lint && npm run security",
    "travis:test": "npm run test -- --runInBand",
    "webpack-defaults": "webpack-defaults"
  },
  "version": "0.4.0"
}
